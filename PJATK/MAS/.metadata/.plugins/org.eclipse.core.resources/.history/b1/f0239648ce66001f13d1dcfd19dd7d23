package controllers;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.TilePane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Text;
import javafx.stage.Stage;
import models.Project;
import models.Task;

import java.io.IOException;

public class TasksController {

    @FXML
    private TilePane tasksTilePane;

    private Project project;

    public void setProject(Project project) {
        this.project = project;
        displayTasks();
    }

    private void displayTasks() {
        tasksTilePane.getChildren().clear();

        for (Task task : project.getTasks()) {
            VBox taskBox = new VBox(10);
            taskBox.setStyle("-fx-border-color: #ddd; -fx-padding: 15; -fx-background-color: #f9f9f9;");

            Text taskName = new Text(task.getName());
            taskName.setStyle("-fx-font-size: 18; -fx-font-weight: bold;");

            Text taskDetails = new Text(task.getDescription());
            taskDetails.setWrappingWidth(200);  // Ограничиваем ширину текста

            Button viewTaskButton = new Button("View Task");
            viewTaskButton.setOnAction(e -> viewTaskDetails(task));

            taskBox.getChildren().addAll(taskName, taskDetails, viewTaskButton);
            tasksTilePane.getChildren().add(taskBox);
        }
    }

    private void viewTaskDetails(Task task) {
        // Здесь можно открыть новое окно или сцену с более подробной информацией о задании
        System.out.println("Viewing details for task: " + task.getName());
    }
}
